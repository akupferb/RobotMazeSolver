#pragma once
#include "RobotModel/MobileRobot.h"
#include "Target/Targets.h"
//#include "RobotModel/WheeledRobot.h"
#include <fstream>
#include <iostream>
#include <string>
#include <vector>

class Maze {
private:
	int n;
	int m;
	std::vector<int> start_position;
	friend class MobileRobot;

public:
	Maze();
	char maze_arr[31][46] = {{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
							{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#','#','#','#',' ',' ','#'},
							{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#'},
							{'#',' ',' ','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
							{'#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#'},
							{'#',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#',' ',' ','#'},
							{'#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
							{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}};
//  void readMaze(std::string);
	void displayMaze();
	void rewriteX();
	bool isObstacle(int, int, MobileRobot*);
	bool isGoal(MobileRobot*, std::vector<int>);
	std::vector<int> isInputValid(int, int);
	void changeSpace(std::vector<int>, char);
	
};